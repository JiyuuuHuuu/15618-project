__device__
unsigned char clip(int n) { return n > 255 ? 255 : (n < 0 ? 0 : n); }

__device__
int isWithinDistance(float2 p_0, float2 p_1, float d) {
  float distX = p_0.x - p_1.x;
  float distY = p_0.y - p_1.y;

  if (distX*distX + distY*distY <= d*d)
    return 1;
  else
    return 0;
}

__device__
float getDistance(float2 p_0, float2 p_1) {
  float distX = p_0.x - p_1.x;
  float distY = p_0.y - p_1.y;

  return sqrt(distX*distX + distY*distY);
}

__device__
float2 currP(float2 p_0, float2 v_0, float2 a, float t) {
  return p_0 + v_0*t + 1.0f/2.0f*a*t*t;
}

__device__
float currD(float d_0, float factor, float t) {
  return max(0.0f, d_0 - factor*t);
}

__device__
float random_float(float minVal, float maxVal, unsigned int &seed) {
  curandState s;
  curand_init(seed, 0, 0, &s);  // Initialize random number generator

  float randomFloat = curand_uniform(&s);  // Generate a random float between 0 and 1
  randomFloat = (randomFloat * (maxVal - minVal)) + minVal;  // Scale to desired range
  seed++;

  return randomFloat;
}

__device__
unsigned char random_char(unsigned char minVal, unsigned char maxVal, unsigned int &seed) {
  curandState s;
  curand_init(seed, 0, 0, &s);  // Initialize random number generator

  float randomFloat = curand_uniform(&s);  // Generate a random float between 0 and 1
  unsigned char randomUnsignedChar = static_cast<unsigned char>(randomFloat * (maxVal - minVal + 1)) + minVal;  // Scale to desired range
  seed++;

  return randomUnsignedChar;
}